% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_function_to_file.R
\name{save_function_to_file}
\alias{save_function_to_file}
\title{Save a Function to a File}
\usage{
save_function_to_file(fn, fn_name = NULL, file = NULL)
}
\arguments{
\item{fn}{A function object. This can be any function, including anonymous functions or LLM-generated ones.}

\item{fn_name}{Optional. A name to assign the function in the output file. If omitted, the function is named
using the expression passed to \code{fn} (e.g., \code{my_fun}).}

\item{file}{Optional. The file name to save to. Defaults to \code{"<fn_name>.R"} in the working directory.}
}
\value{
Invisibly returns the normalized file path.
}
\description{
Writes the source code of a function to a \code{.R} file in the current working directory.
The saved file will include the assignment (\verb{name <- function(...)}) so it can be sourced back in.
}
\details{
This is useful for exporting dynamically created or LLM-generated functions,
such as those created by \code{\link[=make_ai_theme]{make_ai_theme()}}. Only the function's definition is written â€”
any captured environment or side objects will not be preserved.

The function is deparsed and written as text, so certain corner cases like primitives or compiled functions
may not serialize as expected.
}
\examples{
\dontrun{
my_fun <- function(x) x^2 + 1
save_function_to_file(my_fun)

# Save anonymously created function with a given name
save_function_to_file(function(x) log(x + 1), fn_name = "logplus1")
}

}
