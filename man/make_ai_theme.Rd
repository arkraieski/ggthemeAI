% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_ai_theme.R
\name{make_ai_theme}
\alias{make_ai_theme}
\title{Create a ggplot2 Theme Function Using an LLM}
\usage{
make_ai_theme(
  chat,
  theme_prompt,
  image = NULL,
  return_type = c("function", "expression", "character"),
  additional_forbidden = NULL
)
}
\arguments{
\item{chat}{A \code{Chat} R6 object from the \link{ellmer} package}

\item{theme_prompt}{A character string describing the desired theme style.}

\item{image}{An optional object of class \code{ellmer::ContentImageInline} or \code{ellmer::ContentImageRemote}, created by calling \code{\link[ellmer:content_image_url]{ellmer::content_image_url()}} or similar. The image will be added to the data that is sent to the LLM so it can be referenced in \code{theme_prompt}.}

\item{return_type}{\code{"function"}, \code{"expression"}, or \code{"character"}. Determines the type of object returned. A function is returned by default. See Value.}

\item{additional_forbidden}{A character vector of additional function names to block in the generated code. This is useful for adding custom restrictions beyond the default set. The defaults can be seen by running \code{\link[=default_dangerous_calls]{default_dangerous_calls()}}. \code{::} and \code{:::} are always blocked, regardless of this argument.}
}
\value{
A function that can be used as a \code{ggplot2} theme. If \code{return_type} is set to \code{"expression"} or \code{"character"}, the raw code is returned in those formats instead. This allows the user inspect the code for safety before parsing/evaluating to create the final, usable function.
}
\description{
Generates a new \code{ggplot2} theme function by prompting a large language model
(LLM) with a user-supplied description. The generated code is parsed,
evaluated, and returned as a usable theme function.
}
\details{
The theme description is embedded into a prompt that is sent to the LLM.
The resulting response is expected to be valid R code for a theme function.
If the response cannot be parsed as a function, an error is raised.

The full conversation with the LLM remains accessible via the \code{chat} object,
which may be useful for debugging or iteration.

\strong{Warning:} You \strong{must} set \code{return_type} to \code{"expression"} or \code{"character"}
if you do not want to run LLM-generated code before review!
}
\examples{
\dontrun{
library(ellmer)
library(ggplot2)

theme_neon_dark <- make_ai_theme(chat,
  "dark theme with neon green accents")
 ggplot(mtcars, aes(x = hp)) + geom_histogram() +
  theme_neon_dark()
}

}
